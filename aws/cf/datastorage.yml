---
Description: Application Stack Setup
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  CIDRBase:
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})"
    ConstraintDescription: 'must be a just 2 segments of CIDR range: x.x'
    Default: 10.1
    Description: First two segments of the VPC CIDR
    Type: String
  AppImageID:
    Type: String
  AppInstanceType:
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    ConstraintDescription: must be a valid RDS instance type.
    Default: t2.small
    Description: App instance type
    Type: String
  Environment:
    Description: Environment name
    Type: String
  KeyName:
    Type: String
  FoundationStack:
    Description: Name of The Foundation Stacks
    Type: String
  RdsVersion:
    Description: Rds Version
    Default: "5.7"
    Type: String
  RdsInstanceType:
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
    ConstraintDescription: must be a valid RDS instance type.
    Default: db.t2.small
    Description: Rds instance type
    Type: String
  RdsSnapshotIdentifier:
    Default: ''
    Description: Rds Snapshot Identifier - leave empty if you want to
      create or update DBs.
    Type: String
  RdsStorage:
    Default: '5'
    Description: Rds Storage Size
    Type: Number
  RootPassword:
    Description: Rds Root Password
    Default: ygZbqf1Edwtmcc36wodlFuQ5
    Type: String

Resources:
  RdsSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Rds Security Group
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${FoundationStack}-VpcID"
      SecurityGroupIngress:
        - # Open to entire world
          CidrIp: 0.0.0.0/0
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
      SecurityGroupEgress:
        - CidrIp:
            Fn::Join:
              - .
              -
                - Ref: CIDRBase
                - 0.0/16
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432

  AppSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access to application
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${FoundationStack}-VpcID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          # Open to entire world
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          # Open to entire world
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - Ref: Environment
                - app

  RdsSubnet:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Rds Subnet
      SubnetIds:
        - Fn::ImportValue:
            Fn::Sub: "${FoundationStack}-SubnetPublicA"
        - Fn::ImportValue:
            Fn::Sub: "${FoundationStack}-SubnetPublicB"
        - Fn::ImportValue:
            Fn::Sub: "${FoundationStack}-SubnetPublicC"
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - Ref: Environment
                - rds
                - app

  RdsDb:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage:
        Ref: RdsStorage
      DBInstanceClass:
        Ref: RdsInstanceType
      DBSubnetGroupName:
        Ref: RdsSubnet
      DBInstanceIdentifier:
        Fn::Join:
          - "-"
          -
            - Ref: Environment
            - rds
            - app
      DBSnapshotIdentifier:
        Ref: RdsSnapshotIdentifier
      Engine: mysql
      EngineVersion:
        Ref: RdsVersion
      MasterUsername: root
      MasterUserPassword:
        Ref: RootPassword
      MultiAZ: false
      PubliclyAccessible: true
      StorageType: standard
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              -
                - Ref: Environment
                - rds
                - app
      VPCSecurityGroups:
        - Ref: RdsSg

  AppEc2:
    Type: "AWS::EC2::Instance"
    Properties:
      AssociatePublicIpAddress: true
      InstanceMonitoring: false
      InstanceType:
        Ref: AppInstanceType
      ImageId:
        Ref: AppImageID
      KeyName:
        Ref: KeyName
      SecurityGroups:
        - Ref: AppSg
      UserData:
        Fn::Base64:
          Fn::Join:
            - ''
            -
              - "#!/bin/bash\n"
              - /my/script.sh '
              - Fn::GetAtt:
                - RdsDb
                - Endpoint.Address

Outputs:
  AppDNS:
    Value:
      Fn::GetAtt:
        - AppEc2
        - PublicDnsName
  AppIP:
    Value:
      Fn::GetAtt:
        - AppEc2
        - PublicIp
  DbConnection:
    Description: Rds connection URI
    Value:
      Fn::Join:
        - ''
        -
          - mysql://
          - Fn::GetAtt:
            - RdsDb
            - Endpoint.Address
          - ":"
          - Fn::GetAtt:
            - RdsDb
            - Endpoint.Port
          - "/"
